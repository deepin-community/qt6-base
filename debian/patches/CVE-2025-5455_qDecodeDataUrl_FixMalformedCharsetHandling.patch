Author: Tian Shilin<tianshilin@uniontech.com>
Date:   Thu May 04 16:20:24 2025
Subject:Handle missing charset value in qDecodeDataUrl to avoid assertion
Upstream: https://codereview.qt-project.org/c/qt/qtbase/+/642006

Index: qt6-base/src/corelib/io/qdataurl.cpp
===================================================================
--- qt6-base.orig/src/corelib/io/qdataurl.cpp
+++ qt6-base/src/corelib/io/qdataurl.cpp
@@ -47,10 +47,10 @@ Q_CORE_EXPORT bool qDecodeDataUrl(const
         QLatin1StringView textPlain;
         constexpr auto charset = "charset"_L1;
         if (QLatin1StringView{data}.startsWith(charset, Qt::CaseInsensitive)) {
-            qsizetype i = charset.size();
-            while (data.at(i) == ' ')
-                ++i;
-            if (data.at(i) == '=')
+            QByteArrayView copy = data.sliced(charset.size());
+            while (copy.startsWith(' '))
+                copy = copy.sliced(1);
+            if (copy.startsWith('='))
                 textPlain = "text/plain;"_L1;
         }
 
Index: qt6-base/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp
===================================================================
--- qt6-base.orig/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp
+++ qt6-base/tests/auto/corelib/io/qdataurl/tst_qdataurl.cpp
@@ -1,4 +1,4 @@
-// Copyright (C) 2016 The Qt Company Ltd.
+dpk -// Copyright (C) 2016 The Qt Company Ltd.
 // SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only
 
 #include "private/qdataurl_p.h"
@@ -34,8 +34,11 @@ void tst_QDataUrl::decode_data()
         "text/plain"_L1, QByteArray::fromPercentEncoding("%E2%88%9A"));
     row("everythingIsCaseInsensitive", "Data:texT/PlaiN;charSet=iSo-8859-1;Base64,SGVsbG8=", true,
         "texT/PlaiN;charSet=iSo-8859-1"_L1, QByteArrayLiteral("Hello"));
-}
+    row("prematureCharsetEnd", "data:charset,", true,
+        "charset", ""); // nonsense result, but don't crash  
 
+}
+    
 void tst_QDataUrl::decode()
 {
     QFETCH(const QString, input);
